{"ast":null,"code":"var _jsxFileName = \"/Users/kei_matsuoka/Developments/codeflash/frontend/src/apis/login.js\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = (email, password, password_confirmation) => {\n  const url = 'http://localhost:3000/login';\n  return axios.post(url, {\n    email: email,\n    password: password,\n    password_confirmation: password_confirmation\n  }, {\n    withCredentials: true\n  }).then(function (response) {\n    if (response.data.logged_in === true) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this);\n    } else {\n      console.log('no current user');\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}; // セッションのあるユーザーを返す\n\n_c = Login;\nexport const getCurrentUser = () => {\n  const url = 'http://localhost:3000/login';\n  return axios.get(url, {\n    withCredentials: true\n  }).then(function (response) {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Navigate","axios","Login","email","password","password_confirmation","url","post","withCredentials","then","response","data","logged_in","console","log","catch","error","getCurrentUser","get"],"sources":["/Users/kei_matsuoka/Developments/codeflash/frontend/src/apis/login.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nexport const Login = (email, password, password_confirmation) => {\n  const url = 'http://localhost:3000/login';\n  return axios.post(url, {\n    email: email,\n    password: password,\n    password_confirmation: password_confirmation\n  }, { withCredentials: true })\n    .then(function (response) {\n      if (response.data.logged_in === true) {\n        return <Navigate to='/dashboard' />;\n      } else {\n        console.log('no current user');\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n// セッションのあるユーザーを返す\nexport const getCurrentUser = () => {\n  const url = 'http://localhost:3000/login';\n  return axios.get(url, { withCredentials: true })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,qBAAlB,KAA4C;EAC/D,MAAMC,GAAG,GAAG,6BAAZ;EACA,OAAOL,KAAK,CAACM,IAAN,CAAWD,GAAX,EAAgB;IACrBH,KAAK,EAAEA,KADc;IAErBC,QAAQ,EAAEA,QAFW;IAGrBC,qBAAqB,EAAEA;EAHF,CAAhB,EAIJ;IAAEG,eAAe,EAAE;EAAnB,CAJI,EAKJC,IALI,CAKC,UAAUC,QAAV,EAAoB;IACxB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,SAAd,KAA4B,IAAhC,EAAsC;MACpC,oBAAO,QAAC,QAAD;QAAU,EAAE,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO;MACLC,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACD;EACF,CAXI,EAYJC,KAZI,CAYE,UAAUC,KAAV,EAAiB;IACtBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD,CAdI,CAAP;AAeD,CAjBM,C,CAmBP;;KAnBad,K;AAoBb,OAAO,MAAMe,cAAc,GAAG,MAAM;EAClC,MAAMX,GAAG,GAAG,6BAAZ;EACA,OAAOL,KAAK,CAACiB,GAAN,CAAUZ,GAAV,EAAe;IAAEE,eAAe,EAAE;EAAnB,CAAf,EACJC,IADI,CACC,UAAUC,QAAV,EAAoB;IACxB,OAAOA,QAAP;EACD,CAHI,EAIJK,KAJI,CAIE,UAAUC,KAAV,EAAiB;IACtBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD,CANI,CAAP;AAOD,CATM"},"metadata":{},"sourceType":"module"}