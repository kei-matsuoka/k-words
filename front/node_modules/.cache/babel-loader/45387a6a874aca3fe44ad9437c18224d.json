{"ast":null,"code":"var _jsxFileName = \"/Users/kei_matsuoka/Developments/codeflash/frontend/src/Router.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from './AuthProvider';\nimport Top from './components/pages/Top';\nimport Dashboard from './components/pages/Dashboard';\nimport Signup from './apis/signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Router() {\n  _s();\n\n  const {\n    loading,\n    setLoading,\n    isSignedIn,\n    setIsSignedIn,\n    setCurrentUser\n  } = useContext(AuthContext);\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser(); //login中のuserがいるか確認する\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isLogin) === true) {\n        setIsSignedIn(true); //ログインuserがいたらtrue\n\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data); //ログインuserをセット\n\n        console.log(res === null || res === void 0 ? void 0 : res.data.data);\n        console.log(setIsSignedIn);\n        console.log(res === null || res === void 0 ? void 0 : res.data.isLogin);\n      } else {\n        console.log('no current user');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }; //ログインユーザーがいるか確認\n\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]);\n\n  const PrivateRoute = _ref => {\n    let {\n      children\n    } = _ref;\n\n    // load中じゃなければ、\n    if (!loading) {\n      console.log(isSignedIn);\n\n      if (isSignedIn) {\n        return children;\n      } else {\n        console.log(isSignedIn);\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // '/'にアクセスがあった場合\n// ブラウザのsession_idがredisにもあれば、'/dashboard'にリダイレクト\n// '/dashboard'（認証必須ページ）にアクセスがあった場合\n// ブラウザのsession_idがredisになければ、'/'にリダイレクト\n// Signup、Loginが成功した場合\n// ブラウザとredisにsesion_idを保存し、'/dashboard'にリダイレクト\n\n_s(Router, \"X4sj4YkKa2wQazcyJHa6OSpjCT0=\");\n\n_c = Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["useEffect","useContext","BrowserRouter","Routes","Route","Navigate","AuthContext","Top","Dashboard","Signup","Router","loading","setLoading","isSignedIn","setIsSignedIn","setCurrentUser","handleGetCurrentUser","res","getCurrentUser","data","isLogin","console","log","err","PrivateRoute","children"],"sources":["/Users/kei_matsuoka/Developments/codeflash/frontend/src/Router.jsx"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from './AuthProvider';\nimport Top from './components/pages/Top';\nimport Dashboard from './components/pages/Dashboard';\nimport Signup from './apis/signup';\n\nexport default function Router() {\n  const { loading, setLoading, isSignedIn, setIsSignedIn, setCurrentUser } = useContext(AuthContext);\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();//login中のuserがいるか確認する\n      if (res?.data.isLogin === true) {\n        setIsSignedIn(true);//ログインuserがいたらtrue\n        setCurrentUser(res?.data.data);//ログインuserをセット\n        console.log(res?.data.data);\n        console.log(setIsSignedIn)\n        console.log(res?.data.isLogin)\n      } else {\n        console.log('no current user');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setLoading(false);\n  };\n\n  //ログインユーザーがいるか確認\n  useEffect(() =>{\n    handleGetCurrentUser();\n  }, [setCurrentUser])\n\n  const PrivateRoute = ( {children} ) => {\n    // load中じゃなければ、\n    if (!loading) {\n      console.log(isSignedIn)\n      if (isSignedIn) {\n        return children ;\n      } else {\n        console.log(isSignedIn)\n        return <Navigate to='/' />;\n      }\n    } else {\n      return <></>;\n    }\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route index element={<Top />} />\n        <Route path='/dashboard' element={<Dashboard />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\n// '/'にアクセスがあった場合\n// ブラウザのsession_idがredisにもあれば、'/dashboard'にリダイレクト\n\n// '/dashboard'（認証必須ページ）にアクセスがあった場合\n// ブラウザのsession_idがredisになければ、'/'にリダイレクト\n\n// Signup、Loginが成功した場合\n// ブラウザとredisにsesion_idを保存し、'/dashboard'にリダイレクト\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM;IAAEC,OAAF;IAAWC,UAAX;IAAuBC,UAAvB;IAAmCC,aAAnC;IAAkDC;EAAlD,IAAqEd,UAAU,CAACK,WAAD,CAArF;;EAEA,MAAMU,oBAAoB,GAAG,YAAY;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,cAAc,EAAhC,CADE,CACiC;;MACnC,IAAI,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,IAAL,CAAUC,OAAV,MAAsB,IAA1B,EAAgC;QAC9BN,aAAa,CAAC,IAAD,CAAb,CAD8B,CACV;;QACpBC,cAAc,CAACE,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEE,IAAL,CAAUA,IAAX,CAAd,CAF8B,CAEC;;QAC/BE,OAAO,CAACC,GAAR,CAAYL,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAEE,IAAL,CAAUA,IAAtB;QACAE,OAAO,CAACC,GAAR,CAAYR,aAAZ;QACAO,OAAO,CAACC,GAAR,CAAYL,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAEE,IAAL,CAAUC,OAAtB;MACD,CAND,MAMO;QACLC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACD;IACF,CAXD,CAWE,OAAOC,GAAP,EAAY;MACZF,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACD;;IACDX,UAAU,CAAC,KAAD,CAAV;EACD,CAhBD,CAH+B,CAqB/B;;;EACAZ,SAAS,CAAC,MAAK;IACbgB,oBAAoB;EACrB,CAFQ,EAEN,CAACD,cAAD,CAFM,CAAT;;EAIA,MAAMS,YAAY,GAAG,QAAkB;IAAA,IAAhB;MAACC;IAAD,CAAgB;;IACrC;IACA,IAAI,CAACd,OAAL,EAAc;MACZU,OAAO,CAACC,GAAR,CAAYT,UAAZ;;MACA,IAAIA,UAAJ,EAAgB;QACd,OAAOY,QAAP;MACD,CAFD,MAEO;QACLJ,OAAO,CAACC,GAAR,CAAYT,UAAZ;QACA,oBAAO,QAAC,QAAD;UAAU,EAAE,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;IACF,CARD,MAQO;MACL,oBAAO,qCAAP;IACD;EACF,CAbD;;EAeA,oBACE,QAAC,aAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,OAAO,eAAE,QAAC,GAAD;UAAA;UAAA;UAAA;QAAA;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,YAAZ;QAAyB,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,C,CAED;AACA;AAEA;AACA;AAEA;AACA;;GA1DwBH,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}