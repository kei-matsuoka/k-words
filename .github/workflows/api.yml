name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'

env:
  AWS_REGION: "ap-northeast-1"
  ECR_REPOSITORY_API : "k-words-ecr-repository-api"    
  ECR_REPOSITORY_NGINX : "k-words-ecr-repository-nginx"
  ECS_SERVICE: "k-words-service"
  ECS_CLUSTER: "k-words-ecs-cluster"
  CONTAINER_NAME_API: "api"
  CONTAINER_NAME_NGINX: "nginx"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 10
    defaults:
      run:
        working-directory: api/

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition k-words --query taskDefinition > task_definition.json

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build api, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f prd/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG
        echo "image-api=$ECR_REGISTRY/$ECR_REPOSITORY_API:$IMAGE_TAG" >> $GITHUB_OUTPUT
        docker build -f prd/nginx/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY_NGINX:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_NGINX:$IMAGE_TAG
        echo "image-nginx=$ECR_REGISTRY/$ECR_REPOSITORY_NGINX:$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    - name: Fill in the new image-api ID in the Amazon ECS task definition
      id: task-def-api
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task_definition.json
        container-name: ${{ env.CONTAINER_NAME_API }}
        image: ${{ steps.build-image.outputs.image-api }}
    
    - name: Fill in the new image-nginx ID in the Amazon ECS task definition
      id: task-def-nginx
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task_definition.json
        container-name: ${{ env.CONTAINER_NAME_NGINX }}
        image: ${{ steps.build-image.outputs.image-nginx }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def-nginx.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
